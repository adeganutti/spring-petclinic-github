# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages

variables:
  # This will suppress any download for dependencies and plugins or upload messages which would clutter the console log.
  # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this work.
  MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  # As of Maven 3.3.0 instead of this you may define these options in `.mvn/maven.config` so the same config is used
  # when running from the command line.
  # `installAtEnd` and `deployAtEnd` are only effective with recent version of the corresponding plugins.
  MAVEN_CLI_OPTS: "--batch-mode --errors --show-version"
  SECURE_LOG_LEVEL: "debug"
  CI_DEBUG_TRACE: "true"
  #CODE_QUALITY_IMAGE: "registry.example.com/codequality-fork:latest"



# This template uses jdk8 for verifying and deploying images
image: maven:3.6-jdk-8

# Cache downloaded dependencies and plugins between builds.
# To keep cache across branches add 'key: "$CI_JOB_NAME"'
cache:
  paths:
    - .m2/repository

include:
  - template: Security/SAST.gitlab-ci.yml
  - template: Security/Dependency-Scanning.gitlab-ci.yml
  - template: Jobs/Code-Quality.gitlab-ci.yml

stages:          
  - Maven Build
  - Maven Test 
  - test

build-job:       
  stage: Maven Build
  script:
    - echo "Compiling the code..."
    - mvn clean $MAVEN_CLI_OPTS $MAVEN_OPTS deploy -DskipTests -Dcheckstyle.skip -s ci_settings.xml
    - echo "Compile complete."

unit-test-job:  
  stage: Maven Test    
  script:
    - echo "Running unit tests..."
    - mvn test $MAVEN_CLI_OPTS $MAVEN_OPTS -Dcheckstyle.skip -s ci_settings.xml
    - echo "Unit test complete."

sast:
  stage: test
  artifacts:
    name: sast
    paths: [gl-sast-report.json]
    reports:
     sast: gl-sast-report.json
    when: always

spotbugs-sast:
  variables:
    FAIL_NEVER: 1

code_quality:
  stage: test
  artifacts:
    name: code_quality
    paths: [gl-code-quality-report.json]
    reports:
     sast: gl-code-quality-report.json
    when: always
  allow_failure: true
  tags:
    - cq-sans-dind     # Set this job to only run on our new specialized runner

release-branch:
  image: registry.gitlab.com/gitlab-org/release-cli
  rules:
    - if: $CI_COMMIT_TAG                  # Run this job when a tag is created manually
  script:
    - echo 'running release_job'
  release:
    name: 'Release $CI_COMMIT_TAG'
    description: 'Created using the release-cli $EXTRA_DESCRIPTION'  # $EXTRA_DESCRIPTION must be defined
    tag_name: '$CI_COMMIT_TAG'                                       # elsewhere in the pipeline.
    ref: '$CI_COMMIT_TAG'
#    milestones:
#      - 'm1'
#      - 'm2'
#      - 'm3'
    released_at: '2022-01-26T11:00:00Z'  # Optional, is auto generated if not defined, or can use a variable.
    assets: # Optional, multiple asset links
      links:
        - name: 'asset'
          url: 'http://10.3.1.6/testrepo/spring-petclinic/-/packages/3#:~:text=spring%2Dpetclinic%2D2.5.0%2D20220126.102330%2D28.pom'
#          filepath: '/pretty/url/1' # optional
#          link_type: 'other' # optional
